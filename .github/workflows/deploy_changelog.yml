# .github/workflows/deploy_changelog.yml
name: Deploy Changelog

on:
  workflow_dispatch:
    inputs:
      target_repo:
        description: 'Target repository (owner/repo)'
        required: true
      from_tag:
        description: 'Starting tag for changelog'
        required: true
      to_tag:
        description: 'Ending tag for changelog'
        required: true
  # Keep any existing triggers if present
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Read repo contents where the action runs

    steps:
      - name: Checkout Project Code
        uses: actions/checkout@v4
        # No fetch-depth needed as we aren't reading tags from this repo's history

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # pip install . # If packaged

      # No 'Get Previous Tag' step needed - tags are provided as input

      - name: Generate Changelog File
        id: generate
        run: |
          # Use inputs from the workflow_dispatch event
          TARGET_REPO="${{ github.event.inputs.target_repo }}"
          PREVIOUS_TAG="${{ github.event.inputs.from_tag }}"
          CURRENT_TAG="${{ github.event.inputs.to_tag }}"

          OUTPUT_FILENAME="${TARGET_REPO//\//-}_${PREVIOUS_TAG}_to_${CURRENT_TAG}.md"

          echo "Generating changelog from $PREVIOUS_TAG to $CURRENT_TAG for $TARGET_REPO"
          # Make sure the CLI tool is installed or runnable
          python3 -m src.changelog_generator.cli $TARGET_REPO --from-tag $PREVIOUS_TAG --to-tag $CURRENT_TAG -o $OUTPUT_FILENAME --token $GITHUB_TOKEN

          echo "output_filename=$OUTPUT_FILENAME" >> "$GITHUB_OUTPUT"
        env:
          # Use the token provided by the triggering user/CLI via secrets
          # Note: This GITHUB_TOKEN might need repo read access to the TARGET_REPO
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }} # Secret needed for CLI to read target repo
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Checkout Website Repo
        uses: actions/checkout@v4
        with:
          repository: chinardankhara/llm-changelog-website # Your website repo
          path: website
          token: ${{ secrets.WEBSITE_DEPLOY_TOKEN }} # PAT with write access to website repo

      - name: Move Changelog to Website Repo
        run: |
          mkdir -p website/changelogs
          # Ensure the file exists before moving (might fail if generation failed)
          if [ -f "${{ steps.generate.outputs.output_filename }}" ]; then
            mv ${{ steps.generate.outputs.output_filename }} website/changelogs/
            echo "Moved ${{ steps.generate.outputs.output_filename }} to website/changelogs/"
          else
            echo "Changelog file ${{ steps.generate.outputs.output_filename }} not found. Skipping move."
            exit 1 # Optionally fail the workflow if generation failed
          fi

      - name: Commit and Push to Website Repo
        run: |
          cd website
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add changelogs/*
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            # Use the 'to_tag' as a reference in the commit message
            git commit -m "Add changelog up to ${{ github.event.inputs.to_tag }}"
            git push
            echo "Pushed new changelog to website repository."
          fi
        env:
          # Use the PAT with write access to the website repo
          GITHUB_TOKEN: ${{ secrets.WEBSITE_DEPLOY_TOKEN }}
